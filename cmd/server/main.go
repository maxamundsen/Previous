package main

import (
	"fmt"
	"log"
	"net/http"
	"previous/config"
	"previous/preload"
)

// Entry point for the application, initializes package globals
// such as the database connections, http multiplexer, config, etc.
func main() {
	fmt.Println("Previous: A powerful web codebase.\n")

	if config.DEBUG {
		fmt.Println("DEBUG BUILD")
	} else {
		fmt.Println("RELEASE BUILD")
	}

	preloadBundle := preload.Preload(preload.PreloadOptionsAll())

	mapAutoRoutes(preloadBundle.HttpMux) // function autogenerated by Metagen
	mapManualRoutes(preloadBundle.HttpMux)

	log.Println("Mapped HTTP routes")

	log.Println("Listening on http://" + config.GetConfig().Host + ":" + config.GetConfig().Port)

	serveErr := http.ListenAndServe(config.GetConfig().Host+":"+config.GetConfig().Port, preloadBundle.HttpMux)

	if serveErr != nil {
		log.Fatal(serveErr)
	}
}
